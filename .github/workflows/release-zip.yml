name: Create Release Zip

on:
  release:
    types: [created]

jobs:
  create-zip:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install dependencies and build
        run: |
          cd plugin
          npm install
          # Install ncc for bundling
          npm install @vercel/ncc
          # Remove the problematic tsc package that's not the TypeScript compiler
          npm uninstall tsc || true
          # Compile TypeScript first
          node ./node_modules/typescript/bin/tsc || echo "TypeScript compilation failed"
          # Get the main entry point from package.json and bundle with ncc
          node -e "
          const pkg = require('./package.json');
          const path = require('path');
          // Convert the main field to the compiled JS equivalent in dist folder
          let mainFile = pkg.main;
          if (mainFile.endsWith('.ts')) {
            mainFile = mainFile.replace('.ts', '.js').replace('src/', 'dist/');
          } else if (mainFile.startsWith('src/')) {
            mainFile = mainFile.replace('src/', 'dist/');
          }
          console.log('Using main entry point:', mainFile);
          require('child_process').execSync(\`npx ncc build \${mainFile} -o build --source-map --minify\`, {stdio: 'inherit'});
          "
          # Create manifest.json from package.json
          node -e "
          const pkg = require('./package.json');
          const manifest = {
            name: pkg.name,
            display_name: pkg.display_name,
            author: pkg.author,
            main: 'index.js',
            version: pkg.version,
            description: pkg.description
          };
          require('fs').writeFileSync('./build/manifest.json', JSON.stringify(manifest, null, 2));
          console.log('Created manifest.json:', manifest);
          "
        continue-on-error: true

      - name: Create repository zip
        run: |
          # Remove .git directory to avoid including git history in zip
          rm -rf .git

          # Create zip of entire repository (including the built files)
          zip -r "${{ github.event.repository.name }}-${{ github.event.release.tag_name }}.zip" . -x "*.git*"

      - name: Upload zip to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ github.event.repository.name }}-${{ github.event.release.tag_name }}.zip
          asset_name: ${{ github.event.repository.name }}-${{ github.event.release.tag_name }}.zip
          asset_content_type: application/zip
